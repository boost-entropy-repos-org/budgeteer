// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/plaid/plaid_service.proto

package plaidpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Transaction_Type int32

const (
	Transaction_TRANSACTION_TYPE_INVALID    Transaction_Type = 0
	Transaction_TRANSACTION_TYPE_UNRESOLVED Transaction_Type = 1
	Transaction_TRANSACTION_TYPE_DIGITAL    Transaction_Type = 2
	Transaction_TRANSACTION_TYPE_PLACE      Transaction_Type = 3
	Transaction_TRANSACTION_TYPE_SPECIAL    Transaction_Type = 4
)

var Transaction_Type_name = map[int32]string{
	0: "TRANSACTION_TYPE_INVALID",
	1: "TRANSACTION_TYPE_UNRESOLVED",
	2: "TRANSACTION_TYPE_DIGITAL",
	3: "TRANSACTION_TYPE_PLACE",
	4: "TRANSACTION_TYPE_SPECIAL",
}
var Transaction_Type_value = map[string]int32{
	"TRANSACTION_TYPE_INVALID":    0,
	"TRANSACTION_TYPE_UNRESOLVED": 1,
	"TRANSACTION_TYPE_DIGITAL":    2,
	"TRANSACTION_TYPE_PLACE":      3,
	"TRANSACTION_TYPE_SPECIAL":    4,
}

func (x Transaction_Type) String() string {
	return proto.EnumName(Transaction_Type_name, int32(x))
}
func (Transaction_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_plaid_service_71073dca0aba52e2, []int{2, 0}
}

type Transaction_Currency int32

const (
	Transaction_TRANSACTION_CURRENCY_INVALID Transaction_Currency = 0
	Transaction_TRANSACTION_CURRENCY_USD     Transaction_Currency = 1
	Transaction_TRANSACTION_CURRENCY_CAD     Transaction_Currency = 2
)

var Transaction_Currency_name = map[int32]string{
	0: "TRANSACTION_CURRENCY_INVALID",
	1: "TRANSACTION_CURRENCY_USD",
	2: "TRANSACTION_CURRENCY_CAD",
}
var Transaction_Currency_value = map[string]int32{
	"TRANSACTION_CURRENCY_INVALID": 0,
	"TRANSACTION_CURRENCY_USD":     1,
	"TRANSACTION_CURRENCY_CAD":     2,
}

func (x Transaction_Currency) String() string {
	return proto.EnumName(Transaction_Currency_name, int32(x))
}
func (Transaction_Currency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_plaid_service_71073dca0aba52e2, []int{2, 1}
}

type ExchangeTokenRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeTokenRequest) Reset()         { *m = ExchangeTokenRequest{} }
func (m *ExchangeTokenRequest) String() string { return proto.CompactTextString(m) }
func (*ExchangeTokenRequest) ProtoMessage()    {}
func (*ExchangeTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_plaid_service_71073dca0aba52e2, []int{0}
}
func (m *ExchangeTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeTokenRequest.Unmarshal(m, b)
}
func (m *ExchangeTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeTokenRequest.Marshal(b, m, deterministic)
}
func (dst *ExchangeTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeTokenRequest.Merge(dst, src)
}
func (m *ExchangeTokenRequest) XXX_Size() int {
	return xxx_messageInfo_ExchangeTokenRequest.Size(m)
}
func (m *ExchangeTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeTokenRequest proto.InternalMessageInfo

func (m *ExchangeTokenRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ExchangeTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ExchangeTokenResponse struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ItemId               string   `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeTokenResponse) Reset()         { *m = ExchangeTokenResponse{} }
func (m *ExchangeTokenResponse) String() string { return proto.CompactTextString(m) }
func (*ExchangeTokenResponse) ProtoMessage()    {}
func (*ExchangeTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_plaid_service_71073dca0aba52e2, []int{1}
}
func (m *ExchangeTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeTokenResponse.Unmarshal(m, b)
}
func (m *ExchangeTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeTokenResponse.Marshal(b, m, deterministic)
}
func (dst *ExchangeTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeTokenResponse.Merge(dst, src)
}
func (m *ExchangeTokenResponse) XXX_Size() int {
	return xxx_messageInfo_ExchangeTokenResponse.Size(m)
}
func (m *ExchangeTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeTokenResponse proto.InternalMessageInfo

func (m *ExchangeTokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ExchangeTokenResponse) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

// https://plaid.com/docs/api/#transactions
type Transaction struct {
	Id                   string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId            string                   `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Category             []string                 `protobuf:"bytes,3,rep,name=category,proto3" json:"category,omitempty"`
	CategoryId           string                   `protobuf:"bytes,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Type                 Transaction_Type         `protobuf:"varint,5,opt,name=type,proto3,enum=plaid.Transaction_Type" json:"type,omitempty"`
	MerchantName         string                   `protobuf:"bytes,6,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
	Amount               float64                  `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`
	CurrencyType         Transaction_Currency     `protobuf:"varint,8,opt,name=currency_type,json=currencyType,proto3,enum=plaid.Transaction_Currency" json:"currency_type,omitempty"`
	Date                 string                   `protobuf:"bytes,9,opt,name=date,proto3" json:"date,omitempty"`
	Location             *Transaction_Location    `protobuf:"bytes,10,opt,name=location,proto3" json:"location,omitempty"`
	PaymentMeta          *Transaction_PaymentMeta `protobuf:"bytes,11,opt,name=payment_meta,json=paymentMeta,proto3" json:"payment_meta,omitempty"`
	Pending              bool                     `protobuf:"varint,12,opt,name=pending,proto3" json:"pending,omitempty"`
	PendingTransactionId string                   `protobuf:"bytes,13,opt,name=pending_transaction_id,json=pendingTransactionId,proto3" json:"pending_transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_plaid_service_71073dca0aba52e2, []int{2}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Transaction) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Transaction) GetCategory() []string {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Transaction) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *Transaction) GetType() Transaction_Type {
	if m != nil {
		return m.Type
	}
	return Transaction_TRANSACTION_TYPE_INVALID
}

func (m *Transaction) GetMerchantName() string {
	if m != nil {
		return m.MerchantName
	}
	return ""
}

func (m *Transaction) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Transaction) GetCurrencyType() Transaction_Currency {
	if m != nil {
		return m.CurrencyType
	}
	return Transaction_TRANSACTION_CURRENCY_INVALID
}

func (m *Transaction) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Transaction) GetLocation() *Transaction_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Transaction) GetPaymentMeta() *Transaction_PaymentMeta {
	if m != nil {
		return m.PaymentMeta
	}
	return nil
}

func (m *Transaction) GetPending() bool {
	if m != nil {
		return m.Pending
	}
	return false
}

func (m *Transaction) GetPendingTransactionId() string {
	if m != nil {
		return m.PendingTransactionId
	}
	return ""
}

type Transaction_Location struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	City                 string   `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Lat                  float64  `protobuf:"fixed64,3,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon                  float64  `protobuf:"fixed64,4,opt,name=lon,proto3" json:"lon,omitempty"`
	State                string   `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	StoreNumber          string   `protobuf:"bytes,6,opt,name=store_number,json=storeNumber,proto3" json:"store_number,omitempty"`
	Zip                  string   `protobuf:"bytes,7,opt,name=zip,proto3" json:"zip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction_Location) Reset()         { *m = Transaction_Location{} }
func (m *Transaction_Location) String() string { return proto.CompactTextString(m) }
func (*Transaction_Location) ProtoMessage()    {}
func (*Transaction_Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_plaid_service_71073dca0aba52e2, []int{2, 0}
}
func (m *Transaction_Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction_Location.Unmarshal(m, b)
}
func (m *Transaction_Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction_Location.Marshal(b, m, deterministic)
}
func (dst *Transaction_Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction_Location.Merge(dst, src)
}
func (m *Transaction_Location) XXX_Size() int {
	return xxx_messageInfo_Transaction_Location.Size(m)
}
func (m *Transaction_Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction_Location proto.InternalMessageInfo

func (m *Transaction_Location) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Transaction_Location) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Transaction_Location) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Transaction_Location) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *Transaction_Location) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Transaction_Location) GetStoreNumber() string {
	if m != nil {
		return m.StoreNumber
	}
	return ""
}

func (m *Transaction_Location) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

type Transaction_PaymentMeta struct {
	ByOrderOf            string   `protobuf:"bytes,1,opt,name=by_order_of,json=byOrderOf,proto3" json:"by_order_of,omitempty"`
	Payee                string   `protobuf:"bytes,2,opt,name=payee,proto3" json:"payee,omitempty"`
	Payer                string   `protobuf:"bytes,3,opt,name=payer,proto3" json:"payer,omitempty"`
	PaymentMethod        string   `protobuf:"bytes,4,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	PaymentProcessor     string   `protobuf:"bytes,5,opt,name=payment_processor,json=paymentProcessor,proto3" json:"payment_processor,omitempty"`
	Ppdid                string   `protobuf:"bytes,6,opt,name=ppdid,proto3" json:"ppdid,omitempty"`
	Reason               string   `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`
	ReferenceNumber      string   `protobuf:"bytes,8,opt,name=reference_number,json=referenceNumber,proto3" json:"reference_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction_PaymentMeta) Reset()         { *m = Transaction_PaymentMeta{} }
func (m *Transaction_PaymentMeta) String() string { return proto.CompactTextString(m) }
func (*Transaction_PaymentMeta) ProtoMessage()    {}
func (*Transaction_PaymentMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_plaid_service_71073dca0aba52e2, []int{2, 1}
}
func (m *Transaction_PaymentMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction_PaymentMeta.Unmarshal(m, b)
}
func (m *Transaction_PaymentMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction_PaymentMeta.Marshal(b, m, deterministic)
}
func (dst *Transaction_PaymentMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction_PaymentMeta.Merge(dst, src)
}
func (m *Transaction_PaymentMeta) XXX_Size() int {
	return xxx_messageInfo_Transaction_PaymentMeta.Size(m)
}
func (m *Transaction_PaymentMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction_PaymentMeta.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction_PaymentMeta proto.InternalMessageInfo

func (m *Transaction_PaymentMeta) GetByOrderOf() string {
	if m != nil {
		return m.ByOrderOf
	}
	return ""
}

func (m *Transaction_PaymentMeta) GetPayee() string {
	if m != nil {
		return m.Payee
	}
	return ""
}

func (m *Transaction_PaymentMeta) GetPayer() string {
	if m != nil {
		return m.Payer
	}
	return ""
}

func (m *Transaction_PaymentMeta) GetPaymentMethod() string {
	if m != nil {
		return m.PaymentMethod
	}
	return ""
}

func (m *Transaction_PaymentMeta) GetPaymentProcessor() string {
	if m != nil {
		return m.PaymentProcessor
	}
	return ""
}

func (m *Transaction_PaymentMeta) GetPpdid() string {
	if m != nil {
		return m.Ppdid
	}
	return ""
}

func (m *Transaction_PaymentMeta) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Transaction_PaymentMeta) GetReferenceNumber() string {
	if m != nil {
		return m.ReferenceNumber
	}
	return ""
}

type GetTransactionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionsRequest) Reset()         { *m = GetTransactionsRequest{} }
func (m *GetTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsRequest) ProtoMessage()    {}
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_plaid_service_71073dca0aba52e2, []int{3}
}
func (m *GetTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionsRequest.Unmarshal(m, b)
}
func (m *GetTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionsRequest.Marshal(b, m, deterministic)
}
func (dst *GetTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionsRequest.Merge(dst, src)
}
func (m *GetTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionsRequest.Size(m)
}
func (m *GetTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionsRequest proto.InternalMessageInfo

type GetTransactionsResponse struct {
	Transactions         []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetTransactionsResponse) Reset()         { *m = GetTransactionsResponse{} }
func (m *GetTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsResponse) ProtoMessage()    {}
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_plaid_service_71073dca0aba52e2, []int{4}
}
func (m *GetTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionsResponse.Unmarshal(m, b)
}
func (m *GetTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionsResponse.Marshal(b, m, deterministic)
}
func (dst *GetTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionsResponse.Merge(dst, src)
}
func (m *GetTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionsResponse.Size(m)
}
func (m *GetTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionsResponse proto.InternalMessageInfo

func (m *GetTransactionsResponse) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func init() {
	proto.RegisterType((*ExchangeTokenRequest)(nil), "plaid.ExchangeTokenRequest")
	proto.RegisterType((*ExchangeTokenResponse)(nil), "plaid.ExchangeTokenResponse")
	proto.RegisterType((*Transaction)(nil), "plaid.Transaction")
	proto.RegisterType((*Transaction_Location)(nil), "plaid.Transaction.Location")
	proto.RegisterType((*Transaction_PaymentMeta)(nil), "plaid.Transaction.PaymentMeta")
	proto.RegisterType((*GetTransactionsRequest)(nil), "plaid.GetTransactionsRequest")
	proto.RegisterType((*GetTransactionsResponse)(nil), "plaid.GetTransactionsResponse")
	proto.RegisterEnum("plaid.Transaction_Type", Transaction_Type_name, Transaction_Type_value)
	proto.RegisterEnum("plaid.Transaction_Currency", Transaction_Currency_name, Transaction_Currency_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlaidClient is the client API for Plaid service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlaidClient interface {
	ExchangeToken(ctx context.Context, in *ExchangeTokenRequest, opts ...grpc.CallOption) (*ExchangeTokenResponse, error)
	GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (*GetTransactionsResponse, error)
}

type plaidClient struct {
	cc *grpc.ClientConn
}

func NewPlaidClient(cc *grpc.ClientConn) PlaidClient {
	return &plaidClient{cc}
}

func (c *plaidClient) ExchangeToken(ctx context.Context, in *ExchangeTokenRequest, opts ...grpc.CallOption) (*ExchangeTokenResponse, error) {
	out := new(ExchangeTokenResponse)
	err := c.cc.Invoke(ctx, "/plaid.Plaid/ExchangeToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plaidClient) GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (*GetTransactionsResponse, error) {
	out := new(GetTransactionsResponse)
	err := c.cc.Invoke(ctx, "/plaid.Plaid/GetTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlaidServer is the server API for Plaid service.
type PlaidServer interface {
	ExchangeToken(context.Context, *ExchangeTokenRequest) (*ExchangeTokenResponse, error)
	GetTransactions(context.Context, *GetTransactionsRequest) (*GetTransactionsResponse, error)
}

func RegisterPlaidServer(s *grpc.Server, srv PlaidServer) {
	s.RegisterService(&_Plaid_serviceDesc, srv)
}

func _Plaid_ExchangeToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlaidServer).ExchangeToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plaid.Plaid/ExchangeToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlaidServer).ExchangeToken(ctx, req.(*ExchangeTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plaid_GetTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlaidServer).GetTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plaid.Plaid/GetTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlaidServer).GetTransactions(ctx, req.(*GetTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Plaid_serviceDesc = grpc.ServiceDesc{
	ServiceName: "plaid.Plaid",
	HandlerType: (*PlaidServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExchangeToken",
			Handler:    _Plaid_ExchangeToken_Handler,
		},
		{
			MethodName: "GetTransactions",
			Handler:    _Plaid_GetTransactions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/plaid/plaid_service.proto",
}

func init() {
	proto.RegisterFile("proto/plaid/plaid_service.proto", fileDescriptor_plaid_service_71073dca0aba52e2)
}

var fileDescriptor_plaid_service_71073dca0aba52e2 = []byte{
	// 824 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x55, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xc6, 0xf9, 0x6b, 0x72, 0x9c, 0x74, 0xcd, 0xa8, 0xb4, 0x56, 0xb6, 0xdb, 0x86, 0x20, 0xa4,
	0x20, 0xa4, 0x22, 0x15, 0x04, 0xb7, 0x98, 0xd4, 0x5a, 0x19, 0x85, 0x34, 0x38, 0xe9, 0x4a, 0xcb,
	0x8d, 0x35, 0xb1, 0x4f, 0x5b, 0x8b, 0xda, 0x63, 0xc6, 0x13, 0x84, 0x79, 0x00, 0xde, 0x82, 0x4b,
	0xc4, 0x7b, 0xf0, 0x64, 0x68, 0xc6, 0xe3, 0xd4, 0x6d, 0xbd, 0x37, 0xd1, 0x9c, 0xef, 0x7c, 0xe7,
	0x67, 0xce, 0x7c, 0xc7, 0x81, 0xf3, 0x8c, 0x33, 0xc1, 0xbe, 0xca, 0x1e, 0x68, 0x1c, 0x95, 0xbf,
	0x41, 0x8e, 0xfc, 0xf7, 0x38, 0xc4, 0x0b, 0xe5, 0x21, 0x5d, 0x05, 0x4e, 0x5d, 0x38, 0x72, 0xff,
	0x08, 0xef, 0x69, 0x7a, 0x87, 0x1b, 0xf6, 0x2b, 0xa6, 0x3e, 0xfe, 0xb6, 0xc3, 0x5c, 0x90, 0x13,
	0x38, 0xd8, 0xe5, 0xc8, 0x83, 0x38, 0xb2, 0x8d, 0x89, 0x31, 0x1b, 0xf8, 0x3d, 0x69, 0x7a, 0x11,
	0x39, 0x82, 0xae, 0x90, 0x44, 0xbb, 0xa5, 0xe0, 0xd2, 0x98, 0xae, 0xe1, 0x93, 0x67, 0x69, 0xf2,
	0x8c, 0xa5, 0x39, 0x92, 0x4f, 0x61, 0x48, 0xc3, 0x10, 0xf3, 0x3c, 0x28, 0xa3, 0xca, 0x64, 0x66,
	0x89, 0x29, 0xaa, 0x2c, 0x15, 0x0b, 0x4c, 0x64, 0xa9, 0x32, 0x67, 0x4f, 0x9a, 0x5e, 0x34, 0xfd,
	0x6f, 0x00, 0xe6, 0x86, 0xd3, 0x34, 0xa7, 0xa1, 0x88, 0x59, 0x4a, 0x0e, 0xa1, 0xb5, 0x6f, 0xa7,
	0x15, 0x47, 0xe4, 0x0d, 0x00, 0x0d, 0x43, 0xb6, 0x4b, 0xc5, 0x63, 0xec, 0x40, 0x23, 0x5e, 0x44,
	0xc6, 0xd0, 0x0f, 0xa9, 0xc0, 0x3b, 0xc6, 0x0b, 0xbb, 0x3d, 0x69, 0xcf, 0x06, 0xfe, 0xde, 0x26,
	0xe7, 0x60, 0x56, 0x67, 0x19, 0xdb, 0x51, 0xb1, 0x50, 0x41, 0x5e, 0x44, 0xbe, 0x84, 0x8e, 0x28,
	0x32, 0xb4, 0xbb, 0x13, 0x63, 0x76, 0x78, 0x79, 0x72, 0xa1, 0xa6, 0x75, 0x51, 0xeb, 0xe6, 0x62,
	0x53, 0x64, 0xe8, 0x2b, 0x12, 0xf9, 0x0c, 0x46, 0x09, 0x72, 0x79, 0x7d, 0x11, 0xa4, 0x34, 0x41,
	0xbb, 0xa7, 0xf2, 0x0d, 0x2b, 0x70, 0x49, 0x13, 0x24, 0xc7, 0xd0, 0xa3, 0x89, 0x6c, 0xcd, 0x3e,
	0x98, 0x18, 0x33, 0xc3, 0xd7, 0x16, 0xf9, 0x1e, 0x46, 0xe1, 0x8e, 0x73, 0x4c, 0xc3, 0x22, 0x50,
	0x25, 0xfb, 0xaa, 0xe4, 0xeb, 0x86, 0x92, 0x73, 0xcd, 0xf3, 0x87, 0x55, 0x84, 0x6c, 0x82, 0x10,
	0xe8, 0x44, 0x54, 0xa0, 0x3d, 0x50, 0x55, 0xd5, 0x99, 0x7c, 0x07, 0xfd, 0x07, 0x16, 0x52, 0x19,
	0x66, 0xc3, 0xc4, 0x98, 0x99, 0x8d, 0x09, 0x17, 0x9a, 0xe2, 0xef, 0xc9, 0xc4, 0x81, 0x61, 0x46,
	0x8b, 0x04, 0x53, 0x11, 0x24, 0x28, 0xa8, 0x6d, 0xaa, 0xe0, 0xb3, 0x86, 0xe0, 0x55, 0x49, 0xfb,
	0x09, 0x05, 0xf5, 0xcd, 0xec, 0xd1, 0x20, 0x36, 0x1c, 0x64, 0x98, 0x46, 0x71, 0x7a, 0x67, 0x0f,
	0x27, 0xc6, 0xac, 0xef, 0x57, 0x26, 0xf9, 0x06, 0x8e, 0xf5, 0x31, 0x10, 0x8f, 0x99, 0xe4, 0x0b,
	0x8c, 0x54, 0xef, 0x47, 0xda, 0x5b, 0x2b, 0xe3, 0x45, 0xe3, 0x7f, 0x0d, 0xe8, 0x57, 0x9d, 0xca,
	0xe4, 0x34, 0x8a, 0x38, 0xe6, 0xb9, 0x56, 0x42, 0x65, 0xca, 0x31, 0x84, 0xb1, 0x28, 0xb4, 0x10,
	0xd4, 0x99, 0x58, 0xd0, 0x7e, 0xa0, 0xc2, 0x6e, 0xab, 0x89, 0xcb, 0xa3, 0x42, 0x58, 0xaa, 0x5e,
	0x5c, 0x22, 0x2c, 0x95, 0x8a, 0xce, 0x85, 0x9c, 0x5f, 0xb7, 0x54, 0xb4, 0x32, 0xa4, 0x70, 0x73,
	0xc1, 0x38, 0x06, 0xe9, 0x2e, 0xd9, 0x22, 0xd7, 0x4f, 0x6a, 0x2a, 0x6c, 0xa9, 0x20, 0x99, 0xea,
	0xcf, 0x38, 0x53, 0xcf, 0x39, 0xf0, 0xe5, 0x71, 0xfc, 0x57, 0x0b, 0xcc, 0xda, 0x58, 0xc8, 0x19,
	0x98, 0xdb, 0x22, 0x60, 0x3c, 0x42, 0x1e, 0xb0, 0x5b, 0xdd, 0xf0, 0x60, 0x5b, 0x5c, 0x4b, 0xe4,
	0xfa, 0x56, 0x96, 0xce, 0x68, 0x81, 0x58, 0x2d, 0x93, 0x32, 0x2a, 0x94, 0xab, 0xb6, 0x35, 0xca,
	0xc9, 0xe7, 0x70, 0x58, 0x7b, 0x98, 0x7b, 0x56, 0xa9, 0x76, 0xf4, 0x38, 0xfa, 0x7b, 0x26, 0x85,
	0xfb, 0x71, 0x45, 0xcb, 0x38, 0x93, 0x5b, 0xc6, 0xb8, 0xbe, 0x99, 0xa5, 0x1d, 0xab, 0x0a, 0x57,
	0x95, 0xb2, 0x28, 0x8e, 0xf4, 0xed, 0x4a, 0x43, 0x2a, 0x95, 0x23, 0xcd, 0x59, 0xaa, 0xaf, 0xa6,
	0x2d, 0xf2, 0x05, 0x58, 0x1c, 0x6f, 0x51, 0x0a, 0x6f, 0x3f, 0x96, 0xbe, 0x62, 0xbc, 0xda, 0xe3,
	0xe5, 0x68, 0xa6, 0x7f, 0x1b, 0xd0, 0x51, 0xda, 0x3c, 0x05, 0x7b, 0xe3, 0x3b, 0xcb, 0xb5, 0x33,
	0xdf, 0x78, 0xd7, 0xcb, 0x60, 0xf3, 0x7e, 0xe5, 0x06, 0xde, 0xf2, 0x9d, 0xb3, 0xf0, 0xae, 0xac,
	0x8f, 0xc8, 0x39, 0xbc, 0x7e, 0xe1, 0xbd, 0x59, 0xfa, 0xee, 0xfa, 0x7a, 0xf1, 0xce, 0xbd, 0xb2,
	0x8c, 0xc6, 0xf0, 0x2b, 0xef, 0xad, 0xb7, 0x71, 0x16, 0x56, 0x8b, 0x8c, 0xe1, 0xf8, 0x85, 0x77,
	0xb5, 0x70, 0xe6, 0xae, 0xd5, 0x6e, 0x8c, 0x5c, 0xaf, 0xdc, 0xb9, 0xe7, 0x2c, 0xac, 0xce, 0xf4,
	0x1e, 0xfa, 0xd5, 0x32, 0x91, 0x09, 0x9c, 0xd6, 0x99, 0xf3, 0x1b, 0xdf, 0x77, 0x97, 0xf3, 0xf7,
	0xb5, 0x36, 0x9f, 0xe5, 0xda, 0x33, 0x6e, 0xd6, 0x0d, 0x3d, 0xee, 0xbd, 0x73, 0xe7, 0xca, 0x6a,
	0x4d, 0x6d, 0x38, 0x7e, 0x8b, 0xa2, 0x26, 0xe8, 0x5c, 0x7f, 0x62, 0xa7, 0x3f, 0xc3, 0xc9, 0x0b,
	0x8f, 0xfe, 0x6a, 0x7e, 0x0b, 0xc3, 0xda, 0x7e, 0x48, 0xa5, 0xb7, 0x67, 0xe6, 0x25, 0x79, 0xb9,
	0x84, 0xfe, 0x13, 0xde, 0xe5, 0x3f, 0x06, 0x74, 0x57, 0x92, 0x43, 0x7e, 0x84, 0xd1, 0x93, 0x0f,
	0x32, 0xa9, 0xd6, 0xbf, 0xe9, 0x6b, 0x3f, 0x3e, 0x6d, 0x76, 0xea, 0x6e, 0x56, 0xf0, 0xea, 0x59,
	0xa3, 0xe4, 0x8d, 0x0e, 0x68, 0xbe, 0xda, 0xf8, 0xec, 0x43, 0xee, 0x32, 0xe3, 0x0f, 0x83, 0x5f,
	0x0e, 0x14, 0x21, 0xdb, 0x6e, 0x7b, 0xea, 0xef, 0xe8, 0xeb, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x32, 0xf7, 0x95, 0x1d, 0xb1, 0x06, 0x00, 0x00,
}
