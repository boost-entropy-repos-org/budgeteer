syntax = "proto3";

package user;
option go_package = "userpb";

import "google/api/annotations.proto";

service UserService {
    // Called whenever a user signs into budgeteer.
    rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/user/login"
            body: "*"
        };
    }

    // Called when a user authenticates a new item.
    rpc AddItem(AddItemRequest) returns (AddItemResponse) {
        option (google.api.http) = {
            post: "/v1/user/item"
            body: "*"
        };
    }

    rpc Get(GetRequest) returns (GetResponse) {
        option (google.api.http) = {
            post: "/v1/user/get"
            body: "*"
        };
    }

    rpc ListTransactions(ListTransactionsRequest) returns (ListTransactionsResponse) {
        option (google.api.http) = {
            post: "/v1/user/transactions/list"
            body: "*"
        };
    }
}

// Login

message LoginRequest {
    string name = 1;
    string email = 2;
    string pictureURL = 3;
}

message LoginResponse {
    // Whether or not this is a new user.
    bool new = 1;
    User user = 2;
}

// AddItem

message AddItemRequest {
    string token = 1;
    string institution_id = 2;
}

message AddItemResponse {
    // Whether or not this is a new item.
    bool new = 1;
    User user = 2;
}

// Get

message GetRequest {}

message GetResponse {
    User user = 1;
}

// ListTransactions

message ListTransactionsRequest {}

message ListTransactionsResponse {
    repeated Transaction transactions = 1;
}

// General Types

message User {
    string id = 1;
    string name = 2;
    string email = 3;
    string pictureURL = 4;

    repeated Item items = 5;
}

// General Plaid Types

message Item {
    string id = 1;
    string access_token = 2;
    repeated Account accounts = 3;
    Institution institution = 4;
}

message Account {
    string id = 1;
    string mask = 2;
    string name = 3;
    string officialName = 4;
    string subtype = 5;
    string type = 6;

    double availableBalance = 7;
    double currentBalance = 8;
    double limit = 9;
    string currency = 10;
}

message Institution {
    string id = 1;
    string name = 2;
    string brand_name = 3;
    string logo = 4;
    string url = 5;
    string color_dark = 6;
    string color_darker = 7;
    string color_light = 8;
    string color_primary = 9;
}

// https://plaid.com/docs/api/#transactions
message Transaction {
  string id = 1;
  string account_id = 2;
  repeated string category = 3;
  string category_id = 4;

  enum Type {
    TRANSACTION_TYPE_INVALID = 0;
    TRANSACTION_TYPE_UNRESOLVED = 1;
    TRANSACTION_TYPE_DIGITAL = 2;
    TRANSACTION_TYPE_PLACE = 3;
    TRANSACTION_TYPE_SPECIAL = 4;
  }
  Type type = 5;
  string merchant_name = 6;
  double amount = 7;

  enum Currency {
    TRANSACTION_CURRENCY_INVALID = 0;
    TRANSACTION_CURRENCY_USD = 1;
    TRANSACTION_CURRENCY_CAD = 2;
  }
  Currency currency_type = 8;

  string date = 9;

  message Location {
    string address = 1;
    string city = 2;
    double lat = 3;
    double lon = 4;
    string state = 5;
    string store_number = 6;
    string zip = 7;
  }
  Location location = 10;

  message PaymentMeta {
    string by_order_of = 1;
    string payee = 2;
    string payer = 3;
    string payment_method = 4;
    string payment_processor = 5;
    string ppdid = 6;
    string reason = 7;
    string reference_number = 8;
  }
  PaymentMeta payment_meta = 11;

  bool pending = 12;
  string pending_transaction_id = 13;
}
